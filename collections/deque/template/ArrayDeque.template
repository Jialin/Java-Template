[
  {
    "filename": "CharArrayDeque",
    "superclass": "CharArrayQueue",
    "type": "char"
  },
  {
    "filename": "IntArrayDeque",
    "superclass": "IntArrayQueue",
    "type": "int"
  },
  {
    "filename": "LongArrayDeque",
    "superclass": "LongArrayQueue",
    "type": "long"
  }
]
====================================================================================================
package template.collections.deque;

import template.collections.queue.%superclass%;

public class %filename% extends %superclass% {

  public %filename%(int capacity) {
    super(capacity);
  }

  @Override
  public void add(%type% value) {
    throw new UnsupportedOperationException();
  }

  public void addFirst(%type% value) {
    ensureCapacity(size() + 1);
    open = (open - 1) & (values.length - 1);
    values[open] = value;
  }

  public void addLast(%type% value) {
    super.add(value);
  }

  @Override
  public %type% peek() {
    throw new UnsupportedOperationException();
  }

  public %type% peekFirst() {
    return super.peek();
  }

  public %type% peekLast() {
    if (open == close) throw new ArrayIndexOutOfBoundsException();
    return values[(close - 1) & (values.length - 1)];
  }

  @Override
  public %type% poll() {
    throw new UnsupportedOperationException();
  }

  public %type% pollFirst() {
    return super.poll();
  }

  public %type% pollLast() {
    if (open == close) throw new ArrayIndexOutOfBoundsException();
    close = (close - 1) & (values.length - 1);
    return values[close];
  }
}
