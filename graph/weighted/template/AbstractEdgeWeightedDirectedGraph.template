[
  {
    "type": "int",
    "Type": "Int"
  },
  {
    "type": "boolean",
    "Type": "Boolean"
  }
]
====================================================================================================
package template.graph.weighted;

import template.array.%Type%ArrayUtils;
import template.graph.basic.AbstractDirectedGraph;

public abstract class Abstract%Type%EdgeWeightedDirectedGraph
    extends AbstractDirectedGraph
    implements %Type%EdgeWeightedDirectedGraphInterface {

  public %type%[] edgeWeights;

  public Abstract%Type%EdgeWeightedDirectedGraph(int vertexCapacity, int edgeCapacity) {
    super(vertexCapacity, edgeCapacity);
  }

  @Override
  public void createVertexStorage(int vertexCapacity) {}

  @Override
  public void expandEdgeStorage(int edgeCapacity) {
    edgeWeights = %Type%ArrayUtils.expand(edgeWeights, edgeCapacity);
  }

  @Override
  public void initVertexStorage(int vertexCnt) {}

  @Override
  public void add(int fromIdx, int toIdx) {
    throw new UnsupportedOperationException();
  }

  @Override
  public void add(int fromIdx, int toIdx, %type% weight) {
    edgeWeights[currentEdgeCnt] = weight;
    super.add(fromIdx, toIdx);
  }

  @Override
  public %type% edgeWeight(int edgeIdx) {
    return edgeWeights[edgeIdx];
  }
}
